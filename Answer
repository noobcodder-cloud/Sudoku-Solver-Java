public class Susuko {

    public static void solve_so(char[][] board){
        if(board == null || board.length == 0){return;}
        solve(board);
    }

    public static boolean solve(char[][] board){
        for(int i = 0; i < board.length; i++){
            for(int j = 0; i < board[0].length; j++){
                if(board[i][j] == '.'){
                    for(char c = '1'; c <= '9'; c++){
                        if(isValid(board, i, j, c)){
                            board[i][j] = c;
                            if(solve(board)){
                                return true;
                            }
                            else{
                                board[i][j] = '.';
                            }
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }

    public boolean isValid(char[][] board, int row, int coloum, char c){
        for(int i = 0; i < 9; i++){
            if(board[i][coloum] != '.' && board[i][coloum] == c){return false;}
            if(board[row][i] != '.' && board[row][i] == c){return false;}
           if(board[3*(row/3)+i/3][3*(coloum/3)+i%3]!='.' && 3*(row/3)+i/3][3*(coloum/3)+i%3] == c){return false; 
            }
        }
        return true;
    }

    public static void main(String[] args) {
        
    }
}
